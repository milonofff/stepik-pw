{"name": "Авторизация с корректными учетными данными", "status": "failed", "statusDetails": {"message": "AssertionError: Locator expected to have text 'Welcome user'\nActual value: Welcome admin \nCall log:\n  - LocatorAssertions.to_have_text with timeout 5000ms\n  -   - waiting for locator(\"#usernameDisplay\")\n  -     4 × locator resolved to <p id=\"usernameDisplay\"></p>\n  -       - unexpected value \"\"\n  -     5 × locator resolved to <p id=\"usernameDisplay\">Welcome admin</p>\n  -       - unexpected value \"Welcome admin\"", "trace": "login_page = <pages.login_page.LoginPage object at 0x000002574EB3D450>, dashboard_page = <pages.dashboard_page.DashboardPage object at 0x000002574EB3D810>, username = 'user', password = 'user'\n\n    @allure.feature('Авторизация')\n    @allure.story('Авторизация действительные учетные данные')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title('Авторизация с корректными учетными данными')\n    @pytest.mark.parametrize('username, password', [\n        ('user', 'user'),\n        ('admin', 'admin')\n    ])\n    def test_login_success(login_page, dashboard_page, username, password): # login_page и dashboard_page из фикстуры conftest.py\n        with allure.step('Открыть страницу авторизации'):\n            login_page.navigate()  # переход на страницу авторизации\n        with allure.step('Ввести в форму авторизации недействительные учетные данные'):\n            login_page.login('admin', 'admin')  # и заполнение полей логина и пароля\n        with allure.step('Отображается приветственное сообщение с именем пользователя'):\n>           dashboard_page.assert_welcome_message(f\"Welcome {username}\")  # Проверяется, что на странице отображается корректное приветственное сообщение.\n\ntest_login.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.dashboard_page.DashboardPage object at 0x000002574EB3D810>, message = 'Welcome user'\n\n    def assert_welcome_message(self, message): #  проверяет текст приветственного сообщения на панели управления.\n>       expect(self.profile).to_have_text(message)\nE       AssertionError: Locator expected to have text 'Welcome user'\nE       Actual value: Welcome admin \nE       Call log:\nE         - LocatorAssertions.to_have_text with timeout 5000ms\nE         -   - waiting for locator(\"#usernameDisplay\")\nE         -     4 × locator resolved to <p id=\"usernameDisplay\"></p>\nE         -       - unexpected value \"\"\nE         -     5 × locator resolved to <p id=\"usernameDisplay\">Welcome admin</p>\nE         -       - unexpected value \"Welcome admin\"\n\n..\\pages\\dashboard_page.py:14: AssertionError"}, "steps": [{"name": "Открыть страницу авторизации", "status": "passed", "start": 1744167996628, "stop": 1744167997883}, {"name": "Ввести в форму авторизации недействительные учетные данные", "status": "passed", "start": 1744167997883, "stop": 1744167998185}, {"name": "Отображается приветственное сообщение с именем пользователя", "status": "failed", "statusDetails": {"message": "AssertionError: Locator expected to have text 'Welcome user'\nActual value: Welcome admin \nCall log:\n  - LocatorAssertions.to_have_text with timeout 5000ms\n  -   - waiting for locator(\"#usernameDisplay\")\n  -     4 × locator resolved to <p id=\"usernameDisplay\"></p>\n  -       - unexpected value \"\"\n  -     5 × locator resolved to <p id=\"usernameDisplay\">Welcome admin</p>\n  -       - unexpected value \"Welcome admin\"\n\n", "trace": "  File \"D:\\Python\\project_POM\\tests\\test_login.py\", line 36, in test_login_success\n    dashboard_page.assert_welcome_message(f\"Welcome {username}\")  # Проверяется, что на странице отображается корректное приветственное сообщение.\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Python\\project_POM\\pages\\dashboard_page.py\", line 14, in assert_welcome_message\n    expect(self.profile).to_have_text(message)\n  File \"D:\\Python\\project_POM\\env\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 19813, in to_have_text\n    self._sync(\n  File \"D:\\Python\\project_POM\\env\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"D:\\Python\\project_POM\\env\\Lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 481, in to_have_text\n    await self._expect_impl(\n  File \"D:\\Python\\project_POM\\env\\Lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 74, in _expect_impl\n    raise AssertionError(\n"}, "start": 1744167998185, "stop": 1744168003203}], "parameters": [{"name": "browser_name", "value": "'chromium'"}, {"name": "username", "value": "'user'"}, {"name": "password", "value": "'user'"}], "start": 1744167996628, "stop": 1744168003204, "uuid": "88edf229-ae30-4c03-b418-ccb4abcfb87e", "historyId": "4a75dc738333bcf03816606ab53189de", "testCaseId": "86600b41e86dab7ca99f472fa61e4b05", "fullName": "tests.test_login#test_login_success", "labels": [{"name": "severity", "value": "critical"}, {"name": "story", "value": "Авторизация действительные учетные данные"}, {"name": "feature", "value": "Авторизация"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "WIN-T13NHRIR3JH"}, {"name": "thread", "value": "21464-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}